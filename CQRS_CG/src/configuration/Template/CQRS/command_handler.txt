namespace BcmLogicONE.IncidentService.Application.Commands.@<ns>
{
    public class @<cl>CommandHandler : BaseHandler, IRequestHandler<@<cl>Command ,long>
    {
      private readonly IMapper _mapper;
      private readonly ILogger< @<cl>CommandHandler> _logger;

      private readonly BCMContext _dbContext;

      public  @<cl>CommandHandler(IMapper mapper, ILogger< @<cl>CommandHandler> logger, BCMContext dbContext, IMediator mediator) : base(mediator)
      {
          _mapper = mapper ?? throw new ArgumentNullException(nameof(mapper));
          _logger = logger;
          _dbContext = dbContext ?? throw new ArgumentNullException(nameof(dbContext));
      }

        public async Task<long> Handle(@<cl>Command request, CancellationToken cancellationToken)
        {
            //var result = _mapper.Map<Domain.Entities.Vendor>(request);
            //var model = await _vendorRepository.AddAsync(result);
            //return 0;

            throw new NotImplementedException();

        }
    }
}
